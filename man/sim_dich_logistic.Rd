% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_dich_logistic.R
\name{sim_dich_logistic}
\alias{sim_dich_logistic}
\title{Simulate Data from a Dichotomous Logistic Response Model}
\usage{
sim_dich_logistic(N, I, J, M, K, nu_mu, nu_sigma2, lambda, gamma, omega_mu,
  omega_sigma2, zeta_mu, zeta_sigma2, link = "logit")
}
\arguments{
\item{N}{Sample size.}

\item{I}{Number of items per condition.}

\item{J}{Number of eperimental conditions.}

\item{M}{Number of ability (or trait) dimensions.}

\item{K}{Number of experimental contrasts (includes intercept).}

\item{nu_mu}{Mean of the item intercept parameters (scalar).}

\item{nu_sigma2}{Variance of the item intercept parameters (scalar).}

\item{omega_mu}{Vector of means for the subject-level effects of the
experimental manipulation.}

\item{omega_sigma2}{Covariance matrix for the subject-level effects of the
experimental manipulation.}

\item{zeta_mu}{Vector of means for the condition-level prediction errors.}

\item{zeta_sigma2}{Covariance matrix for the condition-level prediction
errors.}

\item{link}{choose between logit and probit models.}
}
\description{
This function simulates data for a dichotmous logist response model. The
simulation example is currently designed to only simulate the SD-IRT model.
}
\examples{
N = 50
I = 20
J = 5
M = 2
K = 2
nu_mu = 0
nu_sigma2 = 0.2
zeta_mu <- rep(x = 0, times = M * J)
zeta_sigma2 <- 0.2
omega_mu <- c(4, -0.5, 0, .5)
omega_sigma2 <- diag(x = c(.5, 0.1, 0.25, 0.1), nrow = M * K)
item_type <- rbinom(n = I*J, size = 1, prob = .7) + 1
measure_weights <-
  matrix(data = c(0.5, -1.0, 0.5, 1.0), nrow = 2, ncol = 2, byrow = T)
lambda <- matrix(data = 0, nrow =I * J, ncol =M * J)
for(j in 1:J){
  lambda[(1 + (j - 1) * I):(j * I), (1 + (j - 1) * M):(j * M)] <-
    measure_weights[item_type, ][(1 + (j - 1) * I):(j * I), ]
}

contrast_codes <- cbind(1, contr.poly(n = J))[, 1:K]
gamma <- matrix(data = 0, nrow = M * J, ncol = K * M)
for(j in 1:J){
  for(m in 1:M){
    gamma[m + M * (j - 1), (1 + (m - 1) * M):(m * M)] <- contrast_codes[j, ]
  }
}


sim_dich_logistic(N = N, I = I, J = J, M = M, K = K, nu_mu = nu_mu,
                  nu_sigma2 = nu_sigma2, lambda = lambda, gamma = gamma,
                  omega_mu = omega_mu, omega_sigma2 = omega_sigma2,
                  zeta_mu = zeta_mu, zeta_sigma2 = zeta_sigma2)
}
