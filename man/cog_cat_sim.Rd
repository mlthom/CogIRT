% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cog_cat_sim.R
\name{cog_cat_sim}
\alias{cog_cat_sim}
\title{Perform Simulated Computerized Adaptive Testing for Task Conditions}
\usage{
cog_cat_sim(
  data = NULL,
  model = NULL,
  guessing = NULL,
  contrast_codes = NULL,
  num_conditions = NULL,
  num_contrasts = NULL,
  constraints = NULL,
  key = NULL,
  omega = NULL,
  item_disc = NULL,
  item_int = NULL,
  conditions = NULL,
  int_par = NULL,
  start_conditions = NULL,
  max_conditions = Inf,
  omit_conditions = NULL,
  min_se = -Inf,
  link = "probit"
)
}
\arguments{
\item{data}{a matrix of item responses (K by IJ). Rows should contain
dichotomous responses (1 or 0) for the items indexed by each column.}

\item{model}{an IRT model name. The options are "1p" for the one-parameter
model, "2p" for the two parameter model, "3p" for the three-parameter, or
"sdt" for a signal detection-weighted model.}

\item{guessing}{either a single numeric guessing value or a matrix of item
guessing parameters (IJ by 1). This argument is only used when model = '3p'.}

\item{contrast_codes}{either a matrix of experimental structure parameters
(JM by MN) or the name in quotes of a R stats contrast function (i.e.,
"contr.helmert", "contr.poly", "contr.sum", "contr.treatment", or
"contr.SAS"). If using the R stats contrast function items in the data matrix
must be arranged by condition.}

\item{num_conditions}{the number of conditions (required if using the R stats
contrast function or when constraints = TRUE).}

\item{num_contrasts}{the number of contrasts including intercept (required if
using the R stats contrast function or when constraints = TRUE).}

\item{constraints}{either a logical (TRUE or FALSE) indicating that item
parameters should be constrained to be equal over the J conditions or a 1 by
I vector of items that should be constrained to be equal across conditions.}

\item{key}{an item key vector where 1 indicates target and 2 indicates
distractor (IJ). Required when model = 'sdt'.}

\item{omega}{a matrix of true omega parameters if known. These are
estimated using the complete data if not supplied by the user.}

\item{item_disc}{a matrix of item discrimination parameters. These are
estimated using the complete data if not supplied by the user.}

\item{item_int}{a matrix of item intercept parameters. These are estimated
using the complete data if not supplied by the user.}

\item{conditions}{a list of experimental conditions that the adaptive testing
algorithm will choose from. The word conditions is used here to refer to a
single item or a group of items that are administered together prior to the
next iteration of adaptive testing. For cognitive experiments, multiple
conditions can be assigned the same experimental level (e.g., memory load
level).}

\item{int_par}{the index of the intentional parameters. That is, the column
of the experimental effects matrix (omega) that should be optimized.}

\item{start_conditions}{a vector of condition(s) that are completed prior to
the onset of adaptive testing.}

\item{max_conditions}{the maximum number of conditions to administer before
terminating adaptive testing. If max_conditions is specified, min_se should
not be.}

\item{omit_conditions}{a vector of conditions to be ommitted from the
simulation.}

\item{min_se}{The minimum standard error of estimate needed to terminate
adaptive testing. If min_see is specified, max_conditions should not be.}

\item{link}{the name ("logit" or "probit") of the link function to be used in
the model.}

\item{...}{additional arguments.}
}
\value{
List with elements for all parameters estimated, standard error
values for all parameters estimated, and the conditions selected for adaptive
testing.
}
\description{
This function performs simulated adapting testing using the D-optimality
criterion (Segall, 2009) which allows the user to focus on a subset of
intentional abilities (or traits).
}
\examples{
# Adapt until minimum standard error criterion met
res1 <- cog_cat_sim(data = ex3$y, model = 'sdt', guessing = NULL,
            contrast_codes = "contr.poly", num_conditions = 10,
            num_contrasts = 2, constraints = NULL, key = ex3$key,
            omega = ex3$omega, item_disc = ex3$lambda, item_int = ex3$nu,
            conditions = ex3$condition, int_par = 1, start_conditions = 3,
            min_se = .3, link = "probit")

# Adapt until maximum conditions criterion met
res2 <- cog_cat_sim(data = ex3$y, model = 'sdt', guessing = NULL,
            contrast_codes = "contr.poly", num_conditions = 10,
            num_contrasts = 2, constraints = NULL, key = ex3$key,
            omega = ex3$omega, item_disc = ex3$lambda, item_int = ex3$nu,
            conditions = ex3$condition, int_par = 1, start_conditions = 3,
            max_conditions = 5, link = "probit")

# Use omit_conditions argument to restrict testing conditions (useful for
# setting up a non-adaptive or restricted-adaptive comparison)
res3 <- cog_cat_sim(data = ex3$y, model = 'sdt', guessing = NULL,
            contrast_codes = "contr.poly", num_conditions = 10,
            num_contrasts = 2, constraints = NULL, key = ex3$key,
            omega = ex3$omega, item_disc = ex3$lambda, item_int = ex3$nu,
            conditions = ex3$condition, int_par = 1, start_conditions = 3,
            max_conditions = 3, omit_conditions = c(2:4, 6:9),
            link = "probit")

# Applied to real cpt data
res4 <- cog_cat_sim(data = cpt$y, model = 'sdt', guessing = NULL,
                   contrast_codes = "contr.poly",
                   num_conditions = length(unique(cpt$condition)),
                   num_contrasts = 2, constraints = NULL, key = cpt$key,
                   conditions = cpt$condition, int_par = 1,
                   start_conditions = 100,
                   max_conditions = 3, link = "probit")

# Applied to real sopt data
res5 <- cog_cat_sim(data = sopt$y, model = '1p', guessing = NULL,
                   contrast_codes = "contr.poly",
                   num_conditions = length(unique(sopt$condition)),
                   num_contrasts = 2, constraints = NULL,
                   conditions = sopt$condition, int_par = 1,
                   start_conditions = 3,
                   max_conditions = 3, link = "probit")

}
\references{
Segall, D. O. (2009). Principles of Multidimensional Adaptive Testing. In W.
J. van der Linden & C. A. W. Glas (Eds.), \emph{Elements of Adaptive Testing}
 (pp. 57-75). https://doi.org/10.1007/978-0-387-85461-8_3
}
